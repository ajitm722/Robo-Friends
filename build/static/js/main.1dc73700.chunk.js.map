{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Robots.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","name","email","CardList","robots","cardComponent","map","user","i","id","SearchBox","searchfield","searchChange","type","placeholder","onChange","username","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAiBeA,EAfF,SAACC,GACZ,OACE,sBAAKC,UAAU,sDAAf,UACE,qBACEC,IAAI,SACJC,IAAG,+BAA0BH,EAAMI,KAAhC,cAEL,gCACE,6BAAKJ,EAAMI,OACX,4BAAIJ,EAAMK,eCMHC,EAdE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACtC,OACE,cAAC,EAAD,CAEEC,GAAIL,EAAOI,GAAGC,GACdR,KAAMG,EAAOI,GAAGP,KAChBC,MAAOE,EAAOI,GAAGN,OAHZM,MAOX,OAAO,gCAAMH,EAAN,QCAMK,EAZG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKd,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVe,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCTLR,EAAS,CACpB,CACEK,GAAI,EACJR,KAAM,MACNe,SAAU,OACVd,MAAO,kBAET,CACEO,GAAI,EACJR,KAAM,MACNe,SAAU,OACVd,MAAO,kBAET,CACEO,GAAI,EACJR,KAAM,MACNe,SAAU,OACVd,MAAO,kBAET,CACEO,GAAI,EACJR,KAAM,MACNe,SAAU,OACVd,MAAO,kBAET,CACEO,GAAI,EACJR,KAAM,MACNe,SAAU,OACVd,MAAO,kBAET,CACEO,GAAI,EACJR,KAAM,MACNe,SAAU,OACVd,MAAO,mBCpBIe,EAbA,SAACpB,GACd,OACE,qBACEqB,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGxB,EAAMyB,YCsCEC,G,wDAxCb,aAAe,IAAD,8BACZ,gBAgBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAhB1C,EAAKC,MAAQ,CACXzB,OAAQ,GACRO,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBmB,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,EAAKR,SAAS,CAAEtB,OAAQ8B,OAE5BC,KAAKT,SAAS,CAAEtB,OAAQA,M,oBAK1B,WAAU,IAAD,OACDgC,EAAiBD,KAAKN,MAAMzB,OAAOiC,QAAO,SAACjC,GAC/C,OAAOA,EAAOH,KACXqC,cACAC,SAAS,EAAKV,MAAMlB,YAAY2B,kBAErC,OAAsB,IAAlBlC,EAAOoC,OACF,yCAGP,sBAAK1C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWc,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUpB,OAAQgC,a,GAnCVK,IAAMC,YCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1dc73700.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img\r\n        alt=\"robots\"\r\n        src={`https://robohash.org/${props.name}?200x200`}\r\n      ></img>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <p>{props.email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  const cardComponent = robots.map((user, i) => {\r\n    return (\r\n      <Card\r\n        key={i}\r\n        id={robots[i].id}\r\n        name={robots[i].name}\r\n        email={robots[i].email}\r\n      />\r\n    );\r\n  });\r\n  return <div>{cardComponent};</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBox;\r\n","export const robots = [\r\n  {\r\n    id: 1,\r\n    name: \"Abc\",\r\n    username: \"Abc1\",\r\n    email: \"Abc1@gmail.com\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Def\",\r\n    username: \"Def1\",\r\n    email: \"Def1@gmail.com\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Ghi\",\r\n    username: \"Ghi1\",\r\n    email: \"Ghi1@gmail.com\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Jkl\",\r\n    username: \"Jkl1\",\r\n    email: \"Jkl1@gmail.com\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Mno\",\r\n    username: \"Mno1\",\r\n    email: \"Mno1@gmail.com\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Pqr\",\r\n    username: \"Pqr1\",\r\n    email: \"Pqr1@gmail.com\",\r\n  },\r\n];\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"1px solid black\",\r\n        height: \"500px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default Scroll;\r\n","import React from \"react\";\r\nimport CardList from \"./CardList\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { robots } from \"./Robots\";\r\nimport Scroll from \"./Scroll\";\r\nimport \"./App.css\";\r\n// import { render } from \"react-dom\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        this.setState({ robots: users });\r\n      });\r\n    this.setState({ robots: robots });\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n  render() {\r\n    const filteredRobots = this.state.robots.filter((robots) => {\r\n      return robots.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchfield.toLowerCase());\r\n    });\r\n    if (robots.length === 0) {\r\n      return <h1>Loading</h1>;\r\n    }\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import Card from \"./Card\";\nimport App from \"./App\";\n// import CardList from \"./CardList\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n// import { robots } from \"./Robots\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}